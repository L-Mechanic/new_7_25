```c
## game.h
#define _CRT_SECURE_NO_WARNINGS
#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2
#define EASY_COUNT 10 
#include<stdlib.h>
#include<stdio.h>
#include<time.h>
void cleanboard(char board[ROWS][COLS], int rows, int cols,char set);
void putboard(char board[ROWS][COLS],int row, int col);
void setmine(char board[ROWS][COLS], int row, int col);
void findmine(char mine[ROWS][COLS], char apperance[ROWS][COLS], int row, int col);

## game.c
#include"game.h"

void cleanboard(char board[ROWS][COLS], int rows, int cols,char set)
{
	int i = 0;
	int j = 0;
	for (i = 0;i < rows;i++)
	{
		for (j = 0;j < cols;j++)
		{
			board[i][j] = set;
		} 
	}
}
void putboard(char board[ROWS][COLS], int row, int col)
{
	int i = 0;
	int j = 0;
	//打印列 （列号）
	for (i = 0;i <=col;i++)
	{
		printf("%d ",i); 
	}
	printf("\n");
	for (i = 1;i <= row;i++)
	{
		printf("%d ", i);
		for (j = 1;j <= col;j++)
		{
			printf("%c ",board[i][j]);
		}
		printf("\n");
	}
}

void setmine(char board[ROWS][COLS], int row, int col)
{
	int count = EASY_COUNT;
	while (count)
	{
		int x = rand()%row+1;//1-9
		int y = rand()%col+1;
		if (board[x][y] == '0')
		{
			board[x][y] = '1';
			count--;
		}
	}
}


int get_mine_count(char mine[ROWS][COLS], int x, int y)
//选中处周围格子是雷的个数
{
	return mine[x-1][y-1] +
		mine[x][y-1] +
		mine[x+1][y-1] +
		mine[x-1][y] +
		mine[x+1][y] +
		mine[x+1][y+1] +
		mine[x][y + 1] +
		mine[x-1][y + 1]- 8 * '0';
}

void findmine(char mine[ROWS][COLS], char apperance[ROWS][COLS], int row, int col)
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("请输入坐标:> ");
		scanf("%d%d", &x, &y);
		//判断坐标是否合法化
		if (x >= 1 && x <= row && y >= 1 && y <= col)
		{
			//坐标合法
			//判断该坐标是否为雷
			//1.踩雷
			if (mine[x][y] == '1')
			{
				printf("很遗憾，你踩到地雷了，game over! :> \n");
				putboard(mine, row, col);
				break;
			}
			else////2.计算周围有几个雷
			{
				int count = get_mine_count(mine, x, y);
				apperance[x][y] = count + '0';
				putboard(apperance, row, col);
			}
		}
		else
		{
			printf("坐标输入错误，请重新输入\n");
		}
	}
}

## test.c
#include"game.h"

void menu()
{
	printf("***********************************\n");
	printf("*********** 1.play  ***************\n");
	printf("*********** 0.exit  ***************\n");
	printf("***********************************\n");
}
void game()
{
	//存储雷的信息
	//1.布置地雷
	char mine[ROWS][COLS] = { 0 };

	//2.排查地雷
	char apperance[ROWS][COLS]= { 0 };
	//初始化
	cleanboard(mine, ROWS, COLS,'0');
	cleanboard(apperance, ROWS, COLS,'*');
	//打印棋盘
	//不外露 putboard(mine, ROW, COL);
	putboard(apperance, ROW, COL);
	//布置地雷
	setmine(mine, ROW, COL);
	//putboard(mine, ROW, COL);
	//扫雷
	findmine(mine, apperance, ROW, COL);
}
void test()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请选择:>");
		scanf("%d",&input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("选择错误，重新选择\n");
			break;
		}
	} while (input);
}

int main()
{
	test();
	return 0;
}
